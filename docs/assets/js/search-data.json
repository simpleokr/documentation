{
  "0": {
    "id": "0",
    "title": "",
    "content": "404 Page not found :( The requested page could not be found.",
    "url": "https://docs.simpleokr.com/404.html",
    "relUrl": "/404.html"
  },
  "1": {
    "id": "1",
    "title": "Developer API",
    "content": "",
    "url": "https://docs.simpleokr.com/api",
    "relUrl": "/api"
  },
  "2": {
    "id": "2",
    "title": "Authentication",
    "content": "Authentication Simple OKR uses API keys to authenticate requests. You can manage API keys via Simple OKR website. API Keys API keys consist of public and secret components. Public component (called Credential) is used to identify the API key on Simple OKR servers. The secret component (called Secret Key) is used to construct a request signature. The secret component should be kept private and not shared with anyone. S1-HMAC-SHA256 authentication protocol S1-HMAC-SHA256 is the first version of authentication protocol used by the Simple OKR API. All requests must include HTTP Authorization header in the following format: Authorization: S1-HMAC-SHA256 Credential=&lt;credential&gt;&amp;Timestamp=&lt;timestamp&gt;&amp;Signature=&lt;signature&gt; Authorization header arguments: credential is the public component of the API key. timestamp is the RFC 3339 timestamp of the current time in UTC. Your clock must be synchronized. We will allow 10 minute clock skew in either direction. signature is a signature constructed using the secret key, credential and the timestamp. The signature is constructed by concatenating credential with timestamp and applying HMAC-SHA256 with the secret key. The output of HMAC must be encoded in hex and converted to lower case. This value becomes the signature. Below are examples API keys and the signature they should produce. Use this example to validate your own signature generation methods: Credential: mycredential Secret key: mysecret Timestamp: 2019-02-03T01:55:37Z Signature: ab9b15c8321dd0e00bbbcc8e33629adcb273b1dfeedb54387cb305fca6c409fa Example signature generation with Go: import ( &quot;crypto/hmac&quot; &quot;crypto/sha256&quot; &quot;encoding/hex&quot; &quot;strings&quot; &quot;time&quot; ) func hmacSign(secret string, data string) string { mac := hmac.New(sha256.New, []byte(secret)) mac.Write([]byte(data)) return strings.ToLower(hex.EncodeToString(mac.Sum(nil))) } func main() { credential := &quot;mycredential&quot; secret := &quot;mysecret&quot; timestamp := time.Now().UTC().Format(time.RFC3339) signature := hmacSign(secret, credential+timestamp) println(credential, secret, timestamp, signature) } Example signature generation with Python 3: import hmac import hashlib credential = b&quot;mycredential&quot; secret = b&quot;mysecret&quot; timestamp = b&quot;2019-02-03T01:55:37Z&quot; mac = hmac.new(bytearray(secret), digestmod=hashlib.sha256) mac.update(bytearray(credential + timestamp)) digest = mac.hexdigest() print(credential, secret, timestamp, digest)",
    "url": "https://docs.simpleokr.com/api/authentication.html",
    "relUrl": "/api/authentication.html"
  },
  "3": {
    "id": "3",
    "title": "Cycles",
    "content": "Cycles Delivery cycles are used to organize objectives into time-bound groups. Delivery cycle is how we track performance and progress of your OKRs. Table of Contents The cycle object Create a cycle List all cycles Retrieve a cycle Update a cycle Delete a cycle The cycle object Attribute Type Description id string Unique delivery cycle identifier name string Name of the delivery cycle created_at string Time when the delivery cycle was created. RFC 3339 format. Example: { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;2019 Q1&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; } Create a cycle Create a new delivery cycle object. Request POST /v1/cycles Request object: Attribute Type Description name string, optional Delivery cycle name Example: { &quot;name&quot;: &quot;2019 Q1&quot; } Response Returns a newly created delivery cycle object. List all cycles Returns a list of your delivery cycles. Request GET /v1/cycles Request arguments: Argument Type Description page_token string, optional Page identifier Response Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results cycles list A list of cycle objects Example: { &quot;next_page_token&quot;: null, &quot;cycles&quot;: [ { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;2019 Q1&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; }, {...}, {...} ] } Retrieve a cycle Retrieve details about the existing delivery cycle. Supply the unique cycle ID from either a cycle creation response or cycle list. Request GET /v1/cycles/:id Request arguments: Argument Type Description id string Cycle identifier Response Returns a delivery cycle object. Update a cycle Update details of an existing cycle. Request POST /v1/cycles/:id Request arguments: Argument Type Description id string Cycle identifier Request object: Attribute Type Description name string New cycle name to be set Response Returns an updated delivery cycle object. Delete a cycle Delete an existing delivery cycle and all objectives associated with it. Request DELETE /v1/cycles/:id Request arguments: Argument Type Description id string Identifier of a cycle to be deleted Response Returns a 200 HTTP response on success.",
    "url": "https://docs.simpleokr.com/api/reference/cycles.html",
    "relUrl": "/api/reference/cycles.html"
  },
  "4": {
    "id": "4",
    "title": "Errors",
    "content": "Errors Simple OKR uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted). Codes in the 5xx range indicate an error with Simple OKR servers. Error response object Errors returned by all Simple OKR APIs use the same error response structure: Attribute Type Description code integer HTTP status code message string Human readable error summary details object, optional A free form object providing additional details about the error Example: { &quot;code&quot;: 400, &quot;message&quot;: &quot;invalid request&quot;, &quot;details&quot;: { &quot;name&quot;: &quot;name is required&quot; } }",
    "url": "https://docs.simpleokr.com/api/errors.html",
    "relUrl": "/api/errors.html"
  },
  "5": {
    "id": "5",
    "title": "Documentation",
    "content": "Simple OKR Documentation Welcome to Simple OKR documentation page.",
    "url": "https://docs.simpleokr.com/",
    "relUrl": "/"
  },
  "6": {
    "id": "6",
    "title": "Key Results",
    "content": "Key Results Key results are quantitative metrics that let you track Objectiveâ€™s performance. Table of Contents The key result object List all key results Retrieve an key result Update an key result Delete a key result The key result object Attribute Type Description id string Unique key result identifier. name string Name of the key result. created_at string Time when the key result was created. RFC 3339 format. modified_at string Time when the key result was last updated. RFC 3339 format. objective_id string Objective identifier. confidence string Decimal string between 0.0 and 1.0 indicating confidence of reaching the target. type string Metric type. One of milestone, baseline, range, positive, negative. current_value string Decimal. Current metric value. target_value_min string, nullable Decimal. Minimum target value. target_value_max string, nullable Decimal. Maximum target value. Target values are optional for some metric types. postive and negative metrics will have only target_value_min set. range metrics will have both target_value_min and target_value_max set. baseline will not have either of the target values set. milestone will always have target_value_min set to 1.00. Example: { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;$40K in revenue from subscription sales&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;modified_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;objective_id&quot;: &quot;12345678-f25d-4df2-9f51-3c38298996b8&quot;, &quot;type&quot;: &quot;positive&quot;, &quot;confidence&quot;: &quot;0.50&quot;, &quot;current_value&quot;: &quot;10000.00&quot;, &quot;target_value_min&quot;: &quot;40000.00&quot;, &quot;target_value_max&quot;: null } List all key results Returns a list of your key results. Request GET /v1/keyresults Request arguments: Argument Type Description cycle_id string Cycle identifier page_token string, optional Page identifier Response Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results keyresults list A list of key result objects Example: { &quot;next_page_token&quot;: null, &quot;keyresults&quot;: [ { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;$40K in revenue from subscription sales&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;modified_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;objective_id&quot;: &quot;12345678-f25d-4df2-9f51-3c38298996b8&quot;, &quot;type&quot;: &quot;positive&quot;, &quot;confidence&quot;: &quot;0.50&quot;, &quot;current_value&quot;: &quot;10000.00&quot;, &quot;target_value_min&quot;: &quot;40000.00&quot;, &quot;target_value_max&quot;: null }, {...}, {...} ] } Retrieve an key result Retrieve details about the key result. Supply the unique key result ID from either a key result creation response or key result list. Request GET /v1/keyresults/:id Request arguments: Argument Type Description id string Key result identifier Response Returns an key result object. Update an key result Update details of an key result. Request POST /v1/keyresults/:id Request arguments: Argument Type Description id string Key result identifier Request object: Request body is an entire key result object with new values. Any omitted attributes will inherit default false value of that particular type. Response Returns an updated key result object. Delete a key result Delete an existing key result and all information associated with it. Request DELETE /v1/keyresults/:id Request arguments: Argument Type Description id string Identifier of a key result to be deleted Response Returns a 200 HTTP response on success.",
    "url": "https://docs.simpleokr.com/api/reference/keyresults.html",
    "relUrl": "/api/reference/keyresults.html"
  },
  "7": {
    "id": "7",
    "title": "Objectives",
    "content": "Objectives Objectives let you capture company, team or personal goals as part of the OKR process. Table of Contents The objective object Create an objective List all objectives Retrieve an objective Update an objective Delete an objective Add key result to an objective List key results for an objective The objective object Attribute Type Description id string Unique objective identifier name string Name of the objective created_at string Time when the objective was created. RFC 3339 format modified_at string Time when the objective was last updated. RFC 3339 format team_id string, nullable Unique team identifier. Indicates the team assigned to the objective assignee_id string, nullable Unique user identifier. Indicates the user assigned to the objective description string, nullable Description of the objective is_personal bool Flag indicating whether this is a personal objective is_company bool Flag indicating whether this is a company objective parent_objective_id string, nullable Unique objective identifier. Indicates objective alignment cycle_id string Unique delivery cycle identifier. Indicates the delivery cycle this objective belongs to Example: { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;Become best at OKRs&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;modified_at&quot;: &quot;2018-02-20T12:32:56Z&quot;, &quot;team_id&quot;: null, &quot;assignee_id&quot;: null, &quot;description&quot;: null, &quot;is_personal&quot;: false, &quot;is_company&quot;: true, &quot;parent_objective_id&quot;: null, &quot;cycle_id&quot;: &quot;12345678-f25d-4df2-9f51-3c38298996b8&quot; } Create an objective Create a new objective object. Request POST /v1/objectives Request object: Attribute Type Description name string Objective name cycle_id string Delivery cycle identifier description string, optional Objective description team_id string, optional Team identifier assignee_id string, optional User identifier parent_objective_id string, optional Objective identifier is_company bool Flag indicating whether this is a company objective is_personal bool Flag indicating whether this is a personal objective Example: { &quot;name&quot;: &quot;Become best at OKRs&quot;, &quot;cycle_id&quot;: &quot;12345678-f25d-4df2-9f51-3c38298996b8&quot;, &quot;description&quot;: null, &quot;team_id&quot;: null, &quot;assignee_id&quot;: null, &quot;parent_objective_id&quot;: null, &quot;is_company&quot;: true, &quot;is_personal&quot;: false } Response Returns a newly created objective object. List all objectives Returns a list of your objectives. Request GET /v1/objectives Request arguments: Argument Type Description cycle_id string Cycle identifier page_token string, optional Page identifier Response Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results objectives list A list of objective objects Example: { &quot;next_page_token&quot;: null, &quot;objectives&quot;: [ { &quot;name&quot;: &quot;Become best at OKRs&quot;, &quot;cycle_id&quot;: &quot;12345678-f25d-4df2-9f51-3c38298996b8&quot;, &quot;description&quot;: null, &quot;team_id&quot;: null, &quot;assignee_id&quot;: null, &quot;parent_objective_id&quot;: null, &quot;is_company&quot;: true, &quot;is_personal&quot;: false }, {...}, {...} ] } Retrieve an objective Retrieve details about the objective. Supply the unique objective ID from either a objective creation response or objective list. Request GET /v1/objectives/:id Request arguments: Argument Type Description id string Objective identifier Response Returns an objective object. Update an objective Update details of an objective. Request POST /v1/objectives/:id Request arguments: Argument Type Description id string Cycle identifier Request object: Request body is an entire objective object with new values. Any omitted attributes will inherit default false value of that particular type. Response Returns an updated objective object. Delete an objective Delete an existing objective and all information associated with it. Request DELETE /v1/objectives/:id Request arguments: Argument Type Description id string Identifier of a objective to be deleted Response Returns a 200 HTTP response on success. Add key result to an objective Add a new key result to an objective. Request POST /v1/objectives/:id/keyresults Request arguments: Argument Type Description id string Identifier of a objective Request object: Request body is a key result object. Response Returns a newly created key result object. List key results for an objective Lists all key results for an objective. Request GET /v1/objectives/:id/keyresults Request arguments: Argument Type Description id string Identifier of a objective Response Returns a list of key results associated with the objective. Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results keyresults list A list of key result objects",
    "url": "https://docs.simpleokr.com/api/reference/objectives.html",
    "relUrl": "/api/reference/objectives.html"
  },
  "8": {
    "id": "8",
    "title": "API Reference",
    "content": "Here you can find API reference for Simple OKR. All API calls should be made over HTTPS to api.simpleokr.com server.",
    "url": "https://docs.simpleokr.com/api/reference",
    "relUrl": "/api/reference"
  },
  "9": {
    "id": "9",
    "title": "Teams",
    "content": "Teams Team objects are used to group users into teams. Table of Contents The team object Create a team List all teams Retrieve a team Update a team Delete a team The team object Attribute Type Description id string Unique team identifier name string Team name created_at string Time when the team was created. RFC 3339 format. Example: { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;Product Engineering&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; } Create a team Create a new team object. Request POST /v1/teams Request object: Attribute Type Description name string, optional Team name Example: { &quot;name&quot;: &quot;Product Engineering&quot; } Response Returns a newly created team object. List all teams Returns a list of your teams. Request GET /v1/teams Request arguments: Argument Type Description page_token string, optional Page identifier Response Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results teams list A list of team objects Example: { &quot;next_page_token&quot;: null, &quot;teams&quot;: [ { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;Product Engineering&quot;, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; }, {...}, {...} ] } Retrieve a team Retrieve details about the existing team. Supply the unique team ID from either a team creation response or team list. Request GET /v1/teams/:id Request arguments: Argument Type Description id string Team identifier Response Returns a team object on success. Update a team Update details of an existing team. Request POST /v1/teams/:id Request arguments: Argument Type Description id string Team identifier Request object: Attribute Type Description name string New team name to be set Response Returns an updated team object. Delete a team Delete an existing team. Request DELETE /v1/teams/:id Request arguments: Argument Type Description id string Identifier of a team to be deleted Response Returns a 200 HTTP response on success.",
    "url": "https://docs.simpleokr.com/api/reference/teams.html",
    "relUrl": "/api/reference/teams.html"
  },
  "10": {
    "id": "10",
    "title": "Users",
    "content": "Users User object holds information about a user of an organization. Table of Contents The user object List all users Retrieve a user The user object Attribute Type Description id string Unique user identifier name string Full name of the user email string Email address associated with the user is_active bool Indicator whether the user is active or not. Inactive users cannot sign into Simple OKR. created_at string Time when the user was created. RFC 3339 format. Example: { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;John Doe&quot;, &quot;email&quot;: &quot;email@example.com&quot;, &quot;is_active&quot;: true, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; } List all users Returns a list of your users. Request GET /v1/users Request arguments: Argument Type Description page_token string, optional Page identifier Response Response object: Attribute Type Description next_page_token string, optional Token for retrieving next page of results users list A list of user objects Example: { &quot;next_page_token&quot;: null, &quot;users&quot;: [ { &quot;id&quot;: &quot;16682617-f25d-4df2-9f51-3c38298996b8&quot;, &quot;name&quot;: &quot;John Doe&quot;, &quot;email&quot;: &quot;email@example.com&quot;, &quot;is_active&quot;: true, &quot;created_at&quot;: &quot;2018-02-20T12:32:56Z&quot; }, {...}, {...} ] } Retrieve a user Retrieve details about the existing user. Supply the unique user ID from a user list response. Request GET /v1/users/:id Request arguments: Argument Type Description id string User identifier Response Returns a user object on success.",
    "url": "https://docs.simpleokr.com/api/reference/users.html",
    "relUrl": "/api/reference/users.html"
  }
  
}
